angular.module("patternfly.pf-mixins",[]),angular.module("patternfly.pf-mixins").factory("ChartsMixin",function(){var a=function(){return{show:!0,r:5}},b=function(a){return{title:a,label:{show:!1},width:10}},c=function(){return{height:130}},d=function(){return{pattern:["#0088CE","#D1D1D1"]}},e=function(){return{show:!1}},f=function(){return{show:!1}},g=function(a){return{donut:b(a),size:c(),legend:f(),color:d(),tooltip:e()}},h=function(){return{zerobased:!0}},i=function(){return{height:100}},j=function(){return{r:1,focus:{expand:{r:4}}}},k=function(){return{pattern:["#3f9c35","#ec7a08","#0088ce","#00659c","#cc0000"]}},l=function(){return{show:!1}},m=function(){return{show:!1}},n=function(){return{area:h(),size:i(),point:j(),color:k(),legend:l(),tooltip:e()}},o=function(){return{zerobased:!0}},p=function(){return{height:40}},q=function(){return{x:{show:!1},y:{show:!1}}},r=function(){return{pattern:["#0088ce","#00659c","#3f9c35","#ec7a08","#cc0000"]}},s=function(){return{show:!1}},t=function(){return{show:!1}},u=function(a){return a=a||function(a){return a.value},{contents:function(b){return'<span class="c3-tooltip-sparkline">'+a(b[0])+"</span>"}}},v=function(a){return{area:o(),size:p(),axis:q(),color:r(),legend:s(),point:t(),tooltip:u(a)}},w=function(){return["#d4f0fa","#F9D67A","#EC7A08","#CE0000"]},x=1,y=function(){return d3.scale.threshold().domain([.7,.8,.9]).range(this.getDefaultHeatmapColorPattern())};return{getDefaultPoint:a,getDefaultRadialConfig:g,getDefaultRadialDonut:b,getDefaultRadialSize:c,getDefaultRadialColor:d,getDefaultRadialTooltip:e,getDefaultRadialLegend:f,getDefaultAreaConfig:n,getDefaultAreaArea:h,getDefaultAreaSize:i,getDefaultAreaPoint:j,getDefaultAreaColor:k,getDefaultAreaLegend:l,getDefaultAreaTooltip:m,getDefaultSparklineConfig:v,getDefaultSparklineArea:o,getDefaultSparklineAxis:q,getDefaultSparklineColor:r,getDefaultSparklineLegend:s,getDefaultSparklinePoint:t,getDefaultSparklineSize:p,getDefaultSparklineTooltip:u,getDefaultHeatmapColorPattern:w,defaultHeatmapBlockPadding:x,getDefaultHeatmapColor:y}}),angular.module("patternfly.pf-components",[]),function(a){"use strict";angular.module("patternfly.pf-components",[]).directive("c3Chart",["$timeout",function(b){return{restrict:"A",scope:{config:"="},template:"<div></div>",replace:!0,link:function(c,d,e){var f=c.config;f.bindto="#"+e.id,b(function(){a.generate(f)},100)}}}])}(c3),angular.module("patternfly.pf-components").directive("pfHeatMap",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{parentid:"@",data:"="},replace:!0,template:'<svg style="width:100%; height: 100%;"></svg>',controller:["$scope","$rootScope",function(b,c){b.blockPadding=a.defaultHeatmapBlockPadding,b.heatmapColor=a.getDefaultHeatmapColor(),b.heatmapColorPattern=a.getDefaultHeatmapColorPattern(),b.determineBlockSize=function(){var a,c,d=b.width,e=b.height,f=b.data.length,g=Math.ceil(Math.sqrt(f*d/e)),h=Math.ceil(Math.sqrt(f*e/d));return a=Math.floor(g*e/d)*g<f?e/Math.ceil(g*e/d):d/g,c=Math.floor(h*d/e)*h<f?d/Math.ceil(d*h/e):e/h,Math.max(a,c)}}],link:function(a,c,d){var e=c[0],f=function(){var b=document.querySelector("#"+a.parentid);a.width=b.clientWidth,a.height=b.clientHeight,a.blockSize=a.determineBlockSize(),a.rows=0===a.blockSize?0:Math.floor(a.height/a.blockSize)};b(function(){f(),a.redraw()},100),a.didInsertElement=function(){f(),a.redraw(),this.resizeNotificationService.on("windowResizedLowLatency",this,this.handleResize)},a.willDestroyElement=function(){this.resizeNotificationService.off("windowResizedLowLatency",this,this.handleResize)},a.handleResize=function(){f(),a.redraw()},a.redraw=function(){function b(a,b){a.style("fill-opacity",b?1:.4)}var c=a.data,d=a.rows,f=a.blockSize,g=a.blockPadding,h=a.heatmapColor,i=e,j=window.d3.select(e);j.selectAll("*").remove();var k=j.selectAll("rect").data(c).enter().append("rect");k.attr("x",function(a,b){return Math.floor(b/d)*f+g}).attr("y",function(a,b){return b%d*f+g}).attr("width",f-2*g).attr("height",f-2*g).style("fill",function(a){return h(a.value)}),k.on("mouseover",function(){k.call(b,!1),d3.select(this).call(b,!0)}),k.on("click",function(a){i.sendAction("click",a)}),k.each(function(a){$(this).tooltip({container:"body",animation:!1,placement:"top",trigger:"hover",html:!0,title:a.tooltip})}),j.on("mouseleave",function(){k.call(b,!0)})}}}}]),angular.module("patternfly.pf-components").directive("pfHeatMapLegend",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{legend:"="},replace:!0,templateUrl:"modules/app/directives/heatmap/heatmap-legend.html",controller:["$scope","$rootScope",function(b,c){var d=[],e=a.getDefaultHeatmapColorPattern();if(b.legend)for(var f=b.legend.length-1;f>=0;f--)d.push({text:b.legend[f],color:e[f]});b.legend_items=d}]}}]),angular.module("patternfly.pf-components").directive("pfDonutPctChart",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"modules/app/directives/donut/donut-percent-chart.html",controller:["$scope",function(b){b.donutChartId="donutChart",b.config.chartId&&(b.donutChartId=b.config.chartId+b.donutChartId),b.getStatusColor=function(a){return a>=90?"#CC0000":a>=75?"#EC7A08":"#0088CE"},b.statusDonutColor=function(a){var b={pattern:[]},c=a.data.used/a.data.total*100;return b.pattern[0]=a.getStatusColor(c),b.pattern[1]="#D1D1D1",b};var c={contents:function(a){return'<span class="c3-tooltip-sparkline" style="white-space: nowrap;">'+Math.round(100*a[0].ratio)+'%:</span><span class="c3-tooltip-sparkline" style="white-space: nowrap;">'+a[0].value+" "+b.config.total_units+" "+a[0].name+"</span>"}};b.getDonutData=function(a){return{columns:[["Used",a.data.used],["Available",a.data.available]],type:"donut",donut:{label:{show:!1}},groups:[["used","available"]],order:null}},b.defaultDonutConfig=a.getDefaultRadialConfig(b.config.total_units),b.defaultDonutConfig.color=b.statusDonutColor(b),b.defaultDonutConfig.tooltip=c,b.config.donut_config=$.extend(!0,angular.copy(b.defaultDonutConfig),b.config.donut_config),b.config.donut_config.data=b.getDonutData(b)}],link:function(a,c,d){d.$observe("config",function(){a.config.donut_config=$.extend(!0,angular.copy(a.defaultDonutConfig),a.config.donut_config),a.config.donut_config.data=a.getDonutData(a),e()});var e=function(){b(function(){var b=c[0].querySelector("text.c3-chart-arcs-title");b.innerHTML='<tspan dy="0" x="0" class="utilization-chart-title-big">'+a.data.used+'</tspan><tspan dy="20" x="0" class="utilization-chart-title-small">'+a.config.total_units+" "+a.config.usage_data_name+"</tspan>"},100)}}}}]),angular.module("patternfly.pf-components").directive("pfSparklineChart",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"modules/app/directives/sparkline/sparkline-chart.html",controller:["$scope",function(b){b.sparklineChartId="sparklineChart",b.config.chartId&&(b.sparklineChartId=b.config.chartId+b.sparklineChartId);var c=function(a){return{contents:function(b){var c=Math.round(b[0].value/a.data.total*100);return'<div id="utilization-sparkline-tooltip" class="module-triangle-bottom"><table class="c3-tooltip">  <tbody>    <tr>      <th colspan="2">'+b[0].x.toLocaleDateString()+'</th>    </tr>    <tr>      <td class="name">'+c+'%:      </td>      <td class="value" style="white-space: nowrap;">'+b[0].value+" "+a.config.total_units+"_"+b[0].name+"</td>    </tr>  </tbody></table></div>"},position:function(a,b,c,d){try{var e=parseInt(d.getAttribute("x")),f=parseInt(d.getAttribute("y")),g=document.querySelector("#sparklineChart").getBoundingClientRect(),h=document.querySelector("#sparklineChart g.c3-axis-y").getBoundingClientRect().right,i=Math.max(0,e+h-g.left-Math.floor(b/2));i=Math.min(i,g.width-b);var j=f-c;return{top:j,left:i}}catch(k){}}}},d={x:{show:!1,type:"timeseries",tick:{format:"%Y-%m-%d"}},y:{show:!1}};b.getSparklineData=function(a){var c=[a.config.usage_data_name],d=["dates"];if(a.data)if(c=c.concat(c,a.data.data),b.data.dates&&a.data.dates.length>0)for(var e=0;e<a.data.dates.length;e++)d.push(new Date(a.data.dates[e]));else for(var f=new Date,g=a.data.data.length-1;g>=0;g--)d.push(new Date(f.getTime()-24*g*60*60*1e3));return{x:"dates",columns:[d,c],type:"area"}},b.defaultSparklineConfig=a.getDefaultSparklineConfig(b.config.total_units),b.defaultSparklineConfig.axis=d,b.defaultSparklineConfig.tooltip=c(b),b.config.sparkline_config=$.extend(!0,angular.copy(b.defaultSparklineConfig),b.config.sparkline_config),b.config.sparkline_config.data=b.getSparklineData(b)}],link:function(a,b,c){c.$observe("config",function(){a.config.sparkline_config=$.extend(!0,angular.copy(a.defaultSparklineConfig),a.config.sparkline_config),a.config.sparkline_config.data=a.getSparklineData(a)})}}}]),angular.module("patternfly.pf-components").directive("pfUtilizationChart",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"modules/app/directives/utilization/utilization-chart.html",controller:["$scope",function(a){void 0===a.data.available&&(a.data.available=a.data.total-a.data.used),a.config.available_units=a.config.available_units||a.total_units}]}}]),angular.module("patternfly.pf-components").directive("pfObjStatus",function(){return{restrict:"A",scope:{objectType:"=type",url:"="},templateUrl:"modules/app/directives/objectstatus/object-status-tile.html"}}),angular.module("patternfly.pf-components").directive("pfProviderTile",function(){return{restrict:"A",scope:{providers:"=providers"},templateUrl:"modules/app/directives/providers/providers-tile.html"}}),angular.module("patternfly.pf-components").directive("pfTile",function(){return{restrict:"A",transclude:!0,scope:{headtitle:"@",subtitle:"@"},templateUrl:"modules/app/directives/tile/tile.html"}}),angular.module("patternfly.pf-components").directive("pfPercentageUsed",["$timeout",function(a){"use strict";return{restrict:"A",scope:{charts:"="},replace:!0,templateUrl:"modules/app/directives/progress/progress-chart.html",link:function(b){b.$watch("charts",function(c,d){"undefined"!=typeof c&&(angular.forEach(b.charts,function(a,b){a.percentageUsed=100*(a.start/a.end)},b.charts),b.animate=!0,a(function(){b.animate=!1},0))})}}}]),angular.module("patternfly.pf-components").directive("cfmeTrends",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{config:"=",data:"=",chartHeight:"=",id:"@"},replace:!0,templateUrl:"modules/app/directives/trends/trends-chart.html",controller:["$scope","$rootScope",function(a,b){var c=this;void 0===a.chartHeight&&(a.chartHeight=71),a.containerId=a.id.trim(),a.chartId=a.containerId+"Chart",this.chartColor={pattern:["#6ca100","#0088ce"]};var d=function(a){return{contents:function(b){return'<div id="container-group-trends-tooltip"><table class="c3-tooltip">  <tbody>    <tr>      <th colspan="2">'+b[0].x.toLocaleDateString()+'</th>    </tr>    <tr">      <td class="name">        <span style="background-color:'+c.chartColor.pattern[0]+'"></span>'+b[0].name+':      </td>      <td class="value" style="white-space: nowrap;">         +'+b[0].value+" "+a.config.tooltipSuffixes[0]+'      </td>    </tr>    <tr">      <div style="background-color:'+c.chartColor.pattern[1]+'"> </div>      <td class="name">        <span style="background-color:'+c.chartColor.pattern[1]+'"></span>'+b[1].name+':      </td>      <td class="value" style="white-space: nowrap;">         -'+b[1].value+" "+a.config.tooltipSuffixes[1]+"      </td>    </tr>  </tbody></table></div>"},position:function(b,c,d,e){var f=parseInt(e.getAttribute("x")),g=parseInt(e.getAttribute("y")),h=document.querySelector("#"+a.chartId).getBoundingClientRect(),i=document.querySelector("#"+a.chartId+" g.c3-axis-y").getBoundingClientRect().right,j=Math.max(0,f+i-h.left-Math.floor(c/2));j=Math.min(j,h.width-c);var k=g-d;return{top:k,left:j}}}},e={x:{show:!1,type:"timeseries",tick:{format:"%Y-%m-%d"}},y:{show:!1}};a.getChartData=function(){var b=a.id.trim(),c=[a.config.labels[0]],d=[a.config.labels[1]],e=["dates"],f=this.data;if(f){var g=0,h=[];for(var i in f)h.push(i);if(c=c.concat(f[h[0]]),d=d.concat(f[h[1]]),g=f[h[0]].length,f.dates&&f.dates.length>0)for(var j=0;j<f.dates.length;j++)e.push(new Date(f.dates[j]));else for(var k=new Date,l=g-1;l>=0;l--)e.push(new Date(k.getTime()-24*l*60*60*1e3))}var m={x:"dates",columns:[e,c,d],type:"area"};if("imageTrends"===b){var n={},o=a.config.labels[0],p=a.config.labels[1];n[o]="y",n[p]="y2",m.axes=n}return m};var f={show:!1},g={height:a.chartHeight};a.chartConfig={point:f,size:g,axis:e,color:this.chartColor,tooltip:d(a),data:a.getChartData()}}],link:function(a,b,c){c.$observe("data",function(){a.chartConfig.data=a.getChartData()})}}}]),angular.module("cfme.containers.dashboardModule",["pascalprecht.translate","ui.bootstrap"]),angular.module("cfme.containers.dashboardModule").controller("containers.dashboardController",["$scope","$translate","$resource",function(a,b,c){"use strict";var d=this;d.navigaition="containers";var e=c("/containers/dashboard/status");e.get(function(a){d.status_widgets=a.data.status,d.providers=a.data.providers}),d.cpuUsageConfig=chartConfig.cpuUsageConfig,d.memoryUsageConfig=chartConfig.memoryUsageConfig,d.storageUsageConfig=chartConfig.storageUsageConfig,d.networkUsageConfig=chartConfig.networkUsageConfig,d.utilizationLoadingDone=!1;var f=c("/containers/dashboard/utilization");f.get(function(a){var b=a.data;d.cpuUsageData=b.cpuUsageData,d.memoryUsageData=b.memoryUsageData,d.storageUsageData=b.storageUsageData,d.networkUsageData=b.networkUsageData,d.utilizationLoadingDone=!0}),d.containerGroupTrendConfig=chartConfig.containerGroupTrendConfig,d.imageCreationsTrendConfig=chartConfig.imageCreationsTrendConfig,d.containerGroupTrendsLoadingDone=!1;var g=c("/containers/dashboard/container-groups");g.get(function(a){d.containerGroupTrends=a.data.containerGroupTrends,d.containerGroupTrendsLoadingDone=!0}),d.imageCreationsLoadingDone=!1;var h=c("/containers/dashboard/image-creations");h.get(function(a){d.imageCreations=a.data.imageCreations,d.imageCreationsLoadingDone=!0}),d.nodeCpuUsageLoadingDone=!1;var i=c("/containers/dashboard/node-cpu-usage");i.get(function(a){d.nodeCpuUsage=a.data.nodeCpuUsage,d.nodeCpuUsageLoadingDone=!0}),d.nodeMemoryUsageLoadingDone=!1;var j=c("/containers/dashboard/node-memory-usage");j.get(function(a){d.nodeMemoryUsage=a.data.nodeMemoryUsage,d.nodeMemoryUsageLoadingDone=!0}),d.nodeStorageUsageLoadingDone=!1;var k=c("/containers/dashboard/node-storage-usage");k.get(function(a){d.nodeStorageUsage=a.data.nodeStorageUsage,d.nodeStorageUsageLoadingDone=!0}),d.nodeNetworkUsageLoadingDone=!1;var l=c("/containers/dashboard/node-network-usage");l.get(function(a){d.nodeNetworkUsage=a.data.nodeNetworkUsage,d.nodeNetworkUsageLoadingDone=!0}),d.nodeHeatMapUsageLegendLabels=["< 70%","70-80%","80-90%","> 90%"],d.nodeHeatMapNetworkLegendLabels=["Very High","High","Low","Very Low"]}]),angular.module("cfme.containers.providersModule",["pascalprecht.translate","ui.bootstrap"]),angular.module("cfme.containers.providersModule").controller("containers.providersController",["$scope","$translate","$resource","$routeParams",function(a,b,c,d){"use strict";var e=this;e.navigaition="Providers";var f=d.id;"undefined"==typeof f&&(f="openshift");var g=c("/containers/providers/status/:id");g.get({id:f},function(a){e.status_widgets=a.data.status,e.providers=a.data.providers}),e.cpuUsageConfig=chartConfig.cpuUsageConfig,e.memoryUsageConfig=chartConfig.memoryUsageConfig,e.storageUsageConfig=chartConfig.storageUsageConfig,e.networkUsageConfig=chartConfig.networkUsageConfig,e.utilizationLoadingDone=!1;var h=c("/containers/dashboard/utilization");h.get(function(a){var b=a.data;e.cpuUsageData=b.cpuUsageData,e.memoryUsageData=b.memoryUsageData,e.storageUsageData=b.storageUsageData,e.networkUsageData=b.networkUsageData,e.utilizationLoadingDone=!0}),e.containerGroupTrendConfig=chartConfig.containerGroupTrendConfig,e.imageCreationsTrendConfig=chartConfig.imageCreationsTrendConfig,e.containerGroupTrendsLoadingDone=!1;var i=c("/containers/dashboard/container-groups");i.get(function(a){e.containerGroupTrends=a.data.containerGroupTrends,e.containerGroupTrendsLoadingDone=!0}),e.imageCreationsLoadingDone=!1;var j=c("/containers/dashboard/image-creations");j.get(function(a){e.imageCreations=a.data.imageCreations,e.imageCreationsLoadingDone=!0}),e.nodeCpuUsageLoadingDone=!1;var k=c("/containers/dashboard/node-cpu-usage");k.get(function(a){e.nodeCpuUsage=a.data.nodeCpuUsage,e.nodeCpuUsageLoadingDone=!0}),e.nodeMemoryUsageLoadingDone=!1;var l=c("/containers/dashboard/node-memory-usage");l.get(function(a){e.nodeMemoryUsage=a.data.nodeMemoryUsage,e.nodeMemoryUsageLoadingDone=!0}),e.nodeStorageUsageLoadingDone=!1;var m=c("/containers/dashboard/node-storage-usage");m.get(function(a){e.nodeStorageUsage=a.data.nodeStorageUsage,e.nodeStorageUsageLoadingDone=!0}),e.nodeNetworkUsageLoadingDone=!1;var n=c("/containers/dashboard/node-network-usage");n.get(function(a){e.nodeNetworkUsage=a.data.nodeNetworkUsage,e.nodeNetworkUsageLoadingDone=!0}),e.nodeHeatMapUsageLegendLabels=["< 70%","70-80%","80-90%","> 90%"],e.nodeHeatMapNetworkLegendLabels=["Very High","High","Low","Very Low"]}]),angular.module("cfme.containers.projectsModule",["pascalprecht.translate","ui.bootstrap"]),angular.module("cfme.containers.projectsModule").controller("containers.projectsController",["$scope","$translate","$resource","$routeParams",function(a,b,c,d){"use strict";var e=this,f=d.id;"undefined"==typeof f&&(f="openshift"),e.navigaition=" ruby-webapp-1 :  My OpenShift Provider";var g=c("/containers/projects/status/:id");g.get({id:f},function(a){e.status_widgets=a.data,e.providers=a.data.providers}),e.cpuUsageConfig=chartConfig.cpuUsageConfig,e.memoryUsageConfig=chartConfig.memoryUsageConfig,e.storageUsageConfig=chartConfig.storageUsageConfig,e.networkUsageConfig=chartConfig.networkUsageConfig,e.utilizationLoadingDone=!1;var h=c("/containers/dashboard/utilization");h.get(function(a){var b=a.data;e.cpuUsageData=b.cpuUsageData,e.memoryUsageData=b.memoryUsageData,e.storageUsageData=b.storageUsageData,e.networkUsageData=b.networkUsageData,e.utilizationLoadingDone=!0}),e.containerGroupTrendConfig=chartConfig.containerGroupTrendConfig,e.containerGroupTrendsLoadingDone=!1;var i=c("/containers/dashboard/container-groups");i.get(function(a){e.containerGroupTrends=a.data.containerGroupTrends,e.containerGroupTrendsLoadingDone=!0}),e.nodeCpuUsageLoadingDone=!1;var j=c("/containers/dashboard/node-cpu-usage");j.get(function(a){e.nodeCpuUsage=a.data.nodeCpuUsage,e.nodeCpuUsageLoadingDone=!0}),e.nodeMemoryUsageLoadingDone=!1;var k=c("/containers/dashboard/node-memory-usage");k.get(function(a){e.nodeMemoryUsage=a.data.nodeMemoryUsage,e.nodeMemoryUsageLoadingDone=!0}),e.nodeStorageUsageLoadingDone=!1;var l=c("/containers/dashboard/node-storage-usage");l.get(function(a){e.nodeStorageUsage=a.data.nodeStorageUsage,e.nodeStorageUsageLoadingDone=!0}),e.nodeNetworkUsageLoadingDone=!1;var m=c("/containers/dashboard/node-network-usage");m.get(function(a){e.nodeNetworkUsage=a.data.nodeNetworkUsage,e.nodeNetworkUsageLoadingDone=!0}),e.nodeHeatMapUsageLegendLabels=["< 70%","70-80%","80-90%","> 90%"],e.nodeHeatMapNetworkLegendLabels=["Very High","High","Low","Very Low"];var n=c("/containers/projects/quotas/:id");n.get({id:f},function(a){e.quotas=a.data})}]),angular.module("cfme.containersModule",["cfme.containers.projectsModule","cfme.containers.providersModule","cfme.containers.dashboardModule"]).config(["$routeProvider",function(a){a.when("/containers/dashboard",{templateUrl:"modules/containers/dashboard/dashboard.html",controller:"containers.dashboardController",controllerAs:"vm"}).when("/containers/projects",{templateUrl:"modules/containers/projects/projects.html",controller:"containers.projectsController",controllerAs:"vm"}).when("/containers/providers",{templateUrl:"modules/containers/providers/providers.html",controller:"containers.providersController",controllerAs:"vm"}).when("/containers/providers/:id",{templateUrl:"modules/containers/providers/providers.html",controller:"containers.providersController",controllerAs:"vm"})}]);var chartConfig={cpuUsageConfig:{chartId:"cpuUsageChart",title:"CPU",total_units:"MHz",usage_data_name:"Used",legend_left_text:"Last 30 Days",legend_right_text:"",num_days:30},memoryUsageConfig:{chartId:"memoryUsageChart",title:"Memory",total_units:"GB",usage_data_name:"Used",legend_left_text:"Last 30 Days",legend_right_text:"",num_days:30},storageUsageConfig:{chartId:"storageUsageChart",title:"Storage",total_units:"TB",usage_data_name:"Used",legend_left_text:"Last 30 Days",legend_right_text:"",num_days:30},networkUsageConfig:{chartId:"networkUsageChart",title:"Network",total_units:"  Gbps",usage_data_name:"Used",legend_left_text:"Last 30 Days",legend_right_text:"",num_days:30},containerGroupTrendConfig:{labels:["Created","Deleted"],tooltipSuffixes:["Container Group","Container Group"]},imageCreationsTrendConfig:{labels:["Images","Total Size"],tooltipSuffixes:["","GB"]}};angular.module("cfme.appModule",["ngResource","ngRoute","ui.bootstrap","pascalprecht.translate","patternfly.navigation","patternfly.pf-mixins","patternfly.pf-components","cfme.containersModule"]).config(["$routeProvider","$translateProvider",function(a,b){"use strict";a.when("/",{redirectTo:"/containers/dashboard"}).otherwise({redirectTo:"/"}),b.translations("default","en"),b.preferredLanguage("default")}]),angular.module("cfme.appModule").controller("cfme.appController",["$scope","$rootScope","$resource",function(a,b,c){"use strict";var d=this;d.username="Administrator",d.navigationItems=[];var e=c("/navigation");e.get(function(a){d.navigationItems=a.data}),d.notifications=[{text:"Modified Datasources ExampleDS"},{text:"Error: System Failure"}],d.clearNotifications=function(){d.notifications=[]}}]),angular.module("patternfly.navigation",[]).directive("pfNavigation",["$location","$rootScope",function(a,b){var c=["$scope",function(c){b.$on("$routeChangeSuccess",function(b,e,f){d(c);var g="#"+a.path();c.items.forEach(function(a){a.children&&a.children.forEach(function(b){g.indexOf(b.href)>-1&&(b["class"]="active",a["class"]="active")})})})}],d=function(a){a.items.forEach(function b(a){a.children?(a["class"]="",a.children.forEach(b)):a["class"]=""})};return{restrict:"A",scope:{items:"="},replace:!0,templateUrl:"modules/app/directives/navigation/navigation.html",link:function(b){b.$watch("items",function(c,d){if(0===d.length){var e="#"+a.path();b.items.forEach(function(a){a.children&&a.children.forEach(function(b){e.indexOf(b.href)>-1&&(b["class"]="active",a["class"]="active")})})}},!0)},controller:c}}]);