angular.module("cfme.containers.dashboardModule",["pascalprecht.translate","ui.bootstrap"]),angular.module("cfme.containers.dashboardModule").controller("containers.dashboardController",["$scope","$translate","$resource",function(a,b,c){"use strict";var d=this;d.navigation="containers";var e=c("/containers/dashboard/status");e.get(function(a){d.status_widgets=a.data.status,d.providers=a.data.types}),d.cpuUsageConfig=chartConfig.cpuUsageConfig,d.memoryUsageConfig=chartConfig.memoryUsageConfig,d.utilizationLoadingDone=!1;var f=c("/containers/dashboard/utilization");f.get(function(a){var b=a.data;d.cpuUsageData=b.cpuUsageData,d.memoryUsageData=b.memoryUsageData,d.utilizationLoadingDone=!0}),d.networkUtilizationCurrentConfig=chartConfig.currentNetworkUsageConfig,d.networkUtilizationCurrentConfig.legend={show:!1},d.networkUtilizationCurrentConfig.chartId="currentNetworkUtilizationChart",d.networkUtilizationDailyConfig=chartConfig.dailyNetworkUsageConfig,d.networkUtilizationDailyConfig.legend={show:!1},d.networkUtilizationDailyConfig.chartId="dailyNetworkUtilizationChart",d.networkUtilizationLoadingDone=!1;var g=c("/containers/dashboard/utilization");g.get(function(a){console.dir(a.data),d.currentNetworkUtilization={creations:a.data.currentNetworkUsageData.data},d.dailyNetworkUtilization={creations:a.data.dailyNetworkUsageData.data},d.networkUtilizationLoadingDone=!0}),d.podTrendConfig=chartConfig.podTrendConfig,d.imageCreationsTrendConfig=chartConfig.imageCreationsTrendConfig,d.podTrendsLoadingDone=!1;var h=c("/containers/dashboard/pods");h.get(function(a){d.podTrends=a.data.podTrends,d.podTrendsLoadingDone=!0}),d.imageCreationsLoadingDone=!1;var i=c("/containers/dashboard/image-creations");i.get(function(a){d.imageCreations=a.data.imageCreations,d.imageCreationsLoadingDone=!0}),d.nodeCpuUsageLoadingDone=!1;var j=c("/containers/dashboard/node-cpu-usage");j.get(function(a){d.nodeCpuUsage=a.data.nodeCpuUsage,d.nodeCpuUsageLoadingDone=!0}),d.nodeMemoryUsageLoadingDone=!1;var k=c("/containers/dashboard/node-memory-usage");k.get(function(a){d.nodeMemoryUsage=a.data.nodeMemoryUsage,d.nodeMemoryUsageLoadingDone=!0}),d.nodeHeatMapUsageLegendLabels=["< 70%","70-80%","80-90%","> 90%"]}]),angular.module("cfme.containers.providersModule",["pascalprecht.translate","ui.bootstrap"]),angular.module("cfme.containers.providersModule").controller("containers.providersController",["$scope","$translate","$resource","$routeParams",function(a,b,c,d){"use strict";var e=this;e.navigaition="Providers";var f=d.id;"undefined"==typeof f&&(f="openshift");var g=c("/containers/providers/status/:id");g.get({id:f},function(a){e.status_widgets=a.data.status,e.providers=a.data.types}),e.cpuUsageConfig=chartConfig.cpuUsageConfig,e.memoryUsageConfig=chartConfig.memoryUsageConfig,e.utilizationLoadingDone=!1;var h=c("/containers/dashboard/utilization");h.get(function(a){var b=a.data;e.cpuUsageData=b.cpuUsageData,e.memoryUsageData=b.memoryUsageData,e.utilizationLoadingDone=!0}),e.networkUtilizationCurrentConfig=chartConfig.currentNetworkUsageConfig,e.networkUtilizationCurrentConfig.legend={show:!1},e.networkUtilizationCurrentConfig.chartId="currentNetworkUtilizationChart",e.networkUtilizationDailyConfig=chartConfig.dailyNetworkUsageConfig,e.networkUtilizationDailyConfig.legend={show:!1},e.networkUtilizationDailyConfig.chartId="dailyNetworkUtilizationChart",e.networkUtilizationLoadingDone=!1;var i=c("/containers/dashboard/utilization");i.get(function(a){console.dir(a.data),e.currentNetworkUtilization={creations:a.data.currentNetworkUsageData.data},e.dailyNetworkUtilization={creations:a.data.dailyNetworkUsageData.data},e.networkUtilizationLoadingDone=!0}),e.podTrendConfig=chartConfig.podTrendConfig,e.imageCreationsTrendConfig=chartConfig.imageCreationsTrendConfig,e.podTrendsLoadingDone=!1;var j=c("/containers/dashboard/pods");j.get(function(a){e.podTrends=a.data.podTrends,e.podTrendsLoadingDone=!0}),e.imageCreationsLoadingDone=!1;var k=c("/containers/dashboard/image-creations");k.get(function(a){e.imageCreations=a.data.imageCreations,e.imageCreationsLoadingDone=!0}),e.nodeCpuUsageLoadingDone=!1;var l=c("/containers/dashboard/node-cpu-usage");l.get(function(a){e.nodeCpuUsage=a.data.nodeCpuUsage,e.nodeCpuUsageLoadingDone=!0}),e.nodeMemoryUsageLoadingDone=!1;var m=c("/containers/dashboard/node-memory-usage");m.get(function(a){e.nodeMemoryUsage=a.data.nodeMemoryUsage,e.nodeMemoryUsageLoadingDone=!0}),e.nodeStorageUsageLoadingDone=!1;var n=c("/containers/dashboard/node-storage-usage");n.get(function(a){e.nodeStorageUsage=a.data.nodeStorageUsage,e.nodeStorageUsageLoadingDone=!0}),e.nodeNetworkUsageLoadingDone=!1;var o=c("/containers/dashboard/node-network-usage");o.get(function(a){e.nodeNetworkUsage=a.data.nodeNetworkUsage,e.nodeNetworkUsageLoadingDone=!0}),e.nodeHeatMapUsageLegendLabels=["< 70%","70-80%","80-90%","> 90%"],e.nodeHeatMapNetworkLegendLabels=["Very High","High","Low","Very Low"]}]),angular.module("cfme.containers.projectsModule",["pascalprecht.translate","ui.bootstrap"]),angular.module("cfme.containers.projectsModule").controller("containers.projectsController",["$scope","$resource","$location","ChartsMixin",function(a,b,c,d){"use strict";var e=this;e.donutConfig={size:{width:55,height:55},donut:{width:4}},e.createUsageConfig=function(a){var b=angular.copy(a);return b.donutConfig=angular.copy(e.donutConfig),b};var f=b("/containers/projects/all");f.get(function(a){e.projects=a.data,e.projects.forEach(function(a){"openshift"===a.provider.providerType?a.provider.icon="pficon-openshift":a.provider.icon="pficon-kubernetes",a.cpuUsageConfig=e.createUsageConfig(chartConfig.cpuUsageConfig),a.memoryUsageConfig=e.createUsageConfig(chartConfig.memoryUsageConfig),a.storageUsageConfig=e.createUsageConfig(chartConfig.storageUsageConfig),a.networkUsageConfig=e.createUsageConfig(chartConfig.networkUsageConfig),a.podsInfo={name:"Pods",count:a.pods,iconClass:"fa-cubes"},a.servicesInfo={name:"Services",count:a.services,iconClass:"pficon-service"},a.routesInfo={name:"Routes",count:a.routes,iconClass:"pficon-route"},a.replicatorsInfo={name:"Replicators",count:a.replicators,iconClass:"fa-cubes"}})}),e.cpuIconClass="icon-",e.cpuIconContent="&#xf0fc",e.memoryIconClass="icon-",e.memoryIconContent="&#xf0eb",e.storageIconClass="icon-",e.storageIconContent="&#xf1c0",e.networkIconClass="icon-",e.networkIconContent="&#xf0e8",a.selectItems=!0,a.selectionMatchProp="uuid",a.selectedItems=[],a.checkDisabled=!1,a.dblClick=function(a){c.path("/containers/projects/"+a.name)},a.multiSelect=!1,e.getUsageChartId=function(a){return console.log("usageChart"+a.uuid),"usageChart"+a.uuid},a.isSelected=function(b){var c=a.selectionMatchProp;return a.selectedItems.length?_.find(a.selectedItems,function(a){return a[c]===b[c]}):!1},a.doListItemSelect=function(b,c){if(console.dir(c),a.selectItems&&c)if(a.multiSelect&&!a.dblClick){var d=_.find(a.selectedItems,function(a){return a===c});d?a.selectedItems=_.without(a.selectedItems,d):a.selectedItems.push(c)}else{if(a.selectedItems[0]===c)return a.dblClick||(a.selectedItems=[]),!1;a.selectedItems=[c]}console.dir(a.selectedItems)}}]),angular.module("cfme.containers.projectsModule").controller("containers.projectController",["$scope","$translate","$resource","$routeParams",function(a,b,c,d){"use strict";var e=this,f=d.id;"undefined"==typeof f&&(f="openshift"),e.navigaition=f;var g=c("/containers/projects/status/:id");g.get({id:f},function(a){e.status_widgets=a.data,e.providers=a.data.providers}),e.cpuUsageConfig=chartConfig.cpuUsageConfig,e.memoryUsageConfig=chartConfig.memoryUsageConfig,e.utilizationLoadingDone=!1;var h=c("/containers/dashboard/utilization");h.get(function(a){var b=a.data;e.cpuUsageData=b.cpuUsageData,e.memoryUsageData=b.memoryUsageData,e.utilizationLoadingDone=!0}),e.networkUtilizationCurrentConfig=chartConfig.currentNetworkUsageConfig,e.networkUtilizationCurrentConfig.legend={show:!1},e.networkUtilizationCurrentConfig.chartId="currentNetworkUtilizationChart",e.networkUtilizationDailyConfig=chartConfig.dailyNetworkUsageConfig,e.networkUtilizationDailyConfig.legend={show:!1},e.networkUtilizationDailyConfig.chartId="dailyNetworkUtilizationChart",e.networkUtilizationLoadingDone=!1;var i=c("/containers/dashboard/utilization");i.get(function(a){console.dir(a.data),e.currentNetworkUtilization={creations:a.data.currentNetworkUsageData.data},e.dailyNetworkUtilization={creations:a.data.dailyNetworkUsageData.data},e.networkUtilizationLoadingDone=!0}),e.podTrendConfig=chartConfig.podTrendConfig,e.podTrendConfig.legend={show:!1},e.podTrendConfig.chartId="podTrendsChart",e.podTrendsLoadingDone=!1;var j=c("/containers/dashboard/pods");j.get(function(a){e.podTrends={creations:a.data.podTrends.creations},e.podTrendsLoadingDone=!0}),e.imageCreationsTrendConfig=chartConfig.imageCreationsTrendConfig,e.imageCreationsTrendConfig.legend={show:!1},e.imageCreationsTrendConfig.chartId="imageTrendsChart",e.imageCreationsLoadingDone=!1;var k=c("/containers/dashboard/image-creations");k.get(function(a){e.imageCreations=a.data.imageCreations,e.imageCreationsLoadingDone=!0}),e.nodeCpuUsageLoadingDone=!1;var l=c("/containers/dashboard/node-cpu-usage");l.get(function(a){e.nodeCpuUsage=a.data.nodeCpuUsage,e.nodeCpuUsageLoadingDone=!0}),e.nodeMemoryUsageLoadingDone=!1;var m=c("/containers/dashboard/node-memory-usage");m.get(function(a){e.nodeMemoryUsage=a.data.nodeMemoryUsage,e.nodeMemoryUsageLoadingDone=!0}),e.nodeHeatMapUsageLegendLabels=["< 70%","70-80%","80-90%","> 90%"];var n=c("/containers/projects/quotas/:id");n.get({id:f},function(a){e.quotas=a.data})}]),angular.module("cfme.containersModule",["cfme.containers.projectsModule","cfme.containers.providersModule","cfme.containers.dashboardModule"]).config(["$routeProvider",function(a){a.when("/containers/dashboard",{templateUrl:"modules/containers/dashboard/dashboard.html",controller:"containers.dashboardController",controllerAs:"vm"}).when("/containers/projects",{templateUrl:"modules/containers/projects/projects.html",controller:"containers.projectsController",controllerAs:"vm"}).when("/containers/projects/:id",{templateUrl:"modules/containers/projects/project.html",controller:"containers.projectController",controllerAs:"vm"}).when("/containers/providers",{templateUrl:"modules/containers/providers/providers.html",controller:"containers.providersController",controllerAs:"vm"}).when("/containers/providers/:id",{templateUrl:"modules/containers/providers/providers.html",controller:"containers.providersController",controllerAs:"vm"})}]);var chartConfig={cpuUsageConfig:{chartId:"cpuUsageChart",title:"CPU",totalUnits:"Cores",usageDataName:"Used",legendLeftText:"Last 30 Days",legendRightText:"",numDays:30},memoryUsageConfig:{chartId:"memoryUsageChart",title:"Memory",totalUnits:"GB",usageDataName:"Used",legendLeftText:"Last 30 Days",legendRightText:"",numDays:30},storageUsageConfig:{chartId:"storageUsageChart",title:"Storage",totalUnits:"TB",usageDataName:"Used",legendLeftText:"Last 30 Days",legendRightText:"",numDays:30},networkUsageConfig:{chartId:"networkUsageChart",title:"Network",totalUnits:"  Gbps",usageDataName:"Used",legendLeftText:"Last 30 Days",legendRightText:"",numDays:30},currentNetworkUsageConfig:{labels:["% Used"],tooltipSuffixes:["% Used"]},dailyNetworkUsageConfig:{labels:["% Used"],tooltipSuffixes:["% Used"]},podTrendConfig:{labels:["Created"],tooltipSuffixes:["Pods"]},imageCreationsTrendConfig:{labels:["Images"],tooltipSuffixes:[""]}};angular.module("cfme.appModule",["ngResource","ngRoute","ui.bootstrap","pascalprecht.translate","patternfly","patternfly.charts","patternfly.navigation","cfme.containersModule","cfme.charts"]).config(["$routeProvider","$translateProvider",function(a,b){"use strict";a.when("/",{redirectTo:"/containers/dashboard"}).otherwise({redirectTo:"/"}),b.translations("default","en"),b.preferredLanguage("default")}]),angular.module("cfme.appModule").controller("cfme.appController",["$scope","$rootScope","$resource",function(a,b,c){"use strict";var d=this;d.username="Administrator",d.navigationItems=[];var e=c("/navigation");e.get(function(a){d.navigationItems=a.data}),d.notifications=[{text:"Modified Datasources ExampleDS"},{text:"Error: System Failure"}],d.clearNotifications=function(){d.notifications=[]}}]),angular.module("patternfly.navigation",[]).directive("pfNavigation",["$location","$rootScope",function(a,b){var c=["$scope",function(c){b.$on("$routeChangeSuccess",function(b,e,f){d(c);var g="#"+a.path();c.items.forEach(function(a){a.children&&a.children.forEach(function(b){g.indexOf(b.href)>-1&&(b["class"]="active",a["class"]="active")})})})}],d=function(a){a.items.forEach(function b(a){a.children?(a["class"]="",a.children.forEach(b)):a["class"]=""})};return{restrict:"A",scope:{items:"="},replace:!0,templateUrl:"modules/app/directives/navigation/navigation.html",link:function(b){b.$watch("items",function(c,d){if(0===d.length){var e="#"+a.path();b.items.forEach(function(a){a.children&&a.children.forEach(function(b){e.indexOf(b.href)>-1&&(b["class"]="active",a["class"]="active")})})}},!0)},controller:c}}]),angular.module("cfme.charts",[]),angular.module("cfme.charts").directive("inlineUsageChart",["ChartsMixin","$timeout",function(a,b){"use strict";return{restrict:"A",scope:{config:"=",data:"=",usageTitle:"=",iconContent:"=",iconClass:"=",chartId:"@"},replace:!0,templateUrl:"modules/app/directives/charts/data-list-usage-chart.html",controller:["$scope",function(b){b.donutChartId="donutChart",b.chartId&&(b.donutChartId=b.chartId+"-"+b.donutChartId),b.getStatusColor=function(a){return a>=90?"#CC0000":a>=75?"#EC7A08":"#0088CE"},b.statusDonutColor=function(a){var b={pattern:[]},c=a.data.used/a.data.total*100;return b.pattern[0]=a.getStatusColor(c),b.pattern[1]="#D1D1D1",b};var c={contents:function(a){return'<span class="c3-tooltip-sparkline" style="white-space: nowrap;">'+Math.round(100*a[0].ratio)+'%:</span><span class="c3-tooltip-sparkline" style="white-space: nowrap;">'+a[0].value+" "+b.config.totalUnits+" "+a[0].name+"</span>"}};b.getDonutData=function(a){return void 0===b.data.available&&(b.data.available=b.data.total-b.data.used),{columns:[["Used",a.data.used],["Available",a.data.available]],type:"donut",donut:{label:{show:!1}},groups:[["used","available"]],order:null}},b.defaultDonutConfig=a.getDefaultRadialConfig(b.config.totalUnits),b.defaultDonutConfig.color=b.statusDonutColor(b),b.defaultDonutConfig.tooltip=c,b.config.donutConfig=$.extend(!0,angular.copy(b.defaultDonutConfig),b.config.donutConfig),b.config.donutConfig.data=b.getDonutData(b)}],link:function(a,c,d){d.$observe("config",function(){a.config.donutConfig=$.extend(!0,angular.copy(a.defaultDonutConfig),a.config.donutConfig),a.config.donutConfig.data=a.getDonutData(a),e()});var e=function(){b(function(){var b=c[0].querySelector("text.c3-chart-arcs-title");if(b){console.log(a.iconContent);var d='<tspan dy="5" x="0" class="inline-utilization-chart-title fa pficon '+a.iconClass+'">'+a.iconContent+"</tspan>";b.innerHTML=d}},100)}}}}]),angular.module("cfme.charts").directive("inlineObjectStatus",function(){"use strict";return{restrict:"A",scope:{objectType:"=type",url:"="},templateUrl:"modules/app/directives/charts/inline-object-status.html"}}),angular.module("cfme.charts").directive("cfmePercentageUsed",["$timeout",function(a){"use strict";return{restrict:"A",scope:{charts:"="},replace:!0,templateUrl:"modules/app/directives/charts/progress-chart.html",link:function(b){b.$watch("charts",function(c,d){"undefined"!=typeof c&&(angular.forEach(b.charts,function(a,b){a.percentageUsed=100*(a.start/a.end)},b.charts),b.animate=!0,a(function(){b.animate=!1},0))})}}}]),angular.module("cfme.charts").directive("cfmeTrends",["ChartsMixin","$timeout",function(a,b){return{restrict:"A",scope:{config:"=",data:"=",chartHeight:"=",id:"@"},replace:!0,templateUrl:"charts/trends/trends-chart.html",controller:["$scope","$rootScope",function(a,b){var c=this;void 0===a.chartHeight&&(a.chartHeight=71),a.containerId=a.id.trim(),a.chartId=a.containerId+"Chart",this.chartColor={pattern:["#0088ce","#00659c","#3f9c35","#ec7a08","#cc0000"]};var d=function(a){return{contents:function(b){return'<div id="container-group-trends-tooltip"><table class="c3-tooltip">  <tbody>    <tr>      <th colspan="2">'+b[0].x.toLocaleDateString()+'</th>    </tr>    <tr">      <td class="name">        <span style="background-color:'+c.chartColor.pattern[0]+'"></span>'+b[0].name+':      </td>      <td class="value" style="white-space: nowrap;">         +'+b[0].value+" "+a.config.tooltipSuffixes[0]+'      </td>    </tr>    <tr">      <div style="background-color:'+c.chartColor.pattern[1]+'"> </div>      <td class="name">        <span style="background-color:'+c.chartColor.pattern[1]+'"></span>'+b[1].name+':      </td>      <td class="value" style="white-space: nowrap;">         -'+b[1].value+" "+a.config.tooltipSuffixes[1]+"      </td>    </tr>  </tbody></table></div>"},position:function(b,c,d,e){var f=parseInt(e.getAttribute("x")),g=parseInt(e.getAttribute("y")),h=document.querySelector("#"+a.chartId).getBoundingClientRect(),i=document.querySelector("#"+a.chartId+" g.c3-axis-y").getBoundingClientRect().right,j=Math.max(0,f+i-h.left-Math.floor(c/2));j=Math.min(j,h.width-c);var k=g-d;return{top:k,left:j}}}},e={x:{show:!1,type:"timeseries",tick:{format:"%Y-%m-%d"}},y:{show:!1}};a.getChartData=function(){var b=(a.id.trim(),[a.config.labels[0]]),c=["dates"],d=this.data;if(d){var e=0,f=[];for(var g in d)f.push(g);if(b=b.concat(d[f[0]]),e=d[f[0]].length,d.dates&&d.dates.length>0)for(var h=0;h<d.dates.length;h++)c.push(new Date(d.dates[h]));else for(var i=new Date,j=e-1;j>=0;j--)c.push(new Date(i.getTime()-24*j*60*60*1e3))}var k={x:"dates",columns:[c,b],type:"area"};return k};var f={show:!1},g={height:a.chartHeight},h={show:!1};a.chartConfig={point:f,size:g,axis:e,color:this.chartColor,tooltip:d(a),legend:h,data:a.getChartData()}}],link:function(a,b,c){c.$observe("data",function(){a.chartConfig.data=a.getChartData()})}}}]),angular.module("cfme.charts").directive("cfmeUtilizationChart",["ChartsMixin","$timeout",function(a,b){"use strict";return{restrict:"A",scope:{config:"=",data:"="},replace:!0,templateUrl:"modules/app/directives/charts/utilization-chart.html",controller:["$scope",function(a){void 0===a.data.available&&(a.data.available=a.data.total-a.data.used),a.config.availableUnits=a.config.availableUnits||a.totalUnits}]}}]);